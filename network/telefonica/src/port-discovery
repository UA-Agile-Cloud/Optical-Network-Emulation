#!/bin/bash

# Title: Topology Discovery
# Author: Alan A. Diaz-Montiel
# Email: adiazmon@tcd.ie
# Affiliation: 	CONNECT Centre,
# 		Trinity College, Dublin
# Date: September 13th, 2017
# Description: This scripts retrieves all the network 
# interfaces created in each Open virtual Switch by
# using the Mininet framework. Such namespaces are
# defined in the format sX-ethY, where sX is the number
# of the switch, and ethY the designated interface (port).
# This script generates a file named node_to_ports
# (described below - line 48).

# Save in file named topo the information regarding
# all the network interfaces in the system.
ifconfig -a >> topo;

# Retreive only those who where created by Mininet.
# Note: the first pipe greps the "eth" parameter,
# if main network interfaces are configured as ethX,
# this might need to change. No need for Ubuntu Server
# Virtual Machines.
NET_INTFS=$(cut -d " " -f 1 topo 2>&1 | grep eth | cut -d- -f1)

NODE_COUNTER=0
PORTS_COUNTER=0
_NODE=""
for NODE in $NET_INTFS
do
	if [ "$_NODE" != "$NODE" ]
        then
		if [ $PORTS_COUNTER != 0 ]; then
			INDEX=$(($NODE_COUNTER-1))
			NODE_TO_PORTS[$INDEX]=$PORTS_COUNTER
		fi
                _NODE=$NODE
                NODE_COUNTER=$((NODE_COUNTER+1))
                PORTS_COUNTER=1
        else
                PORTS_COUNTER=$((PORTS_COUNTER+1))
        fi
done
INDEX=$(($NODE_COUNTER-1))
NODE_TO_PORTS[$INDEX]=$PORTS_COUNTER

# The array NODE_TO_PORTS is logically defined as:
# 	Index position + 1 = network node (datapath ID).
# 	Value in index position = number of ports.
ELEMENTS=${#NODE_TO_PORTS[@]}
for ((i=0; i<$ELEMENTS; i++))
do
	echo ${NODE_TO_PORTS[$i]} >> ../../public/network/node_to_ports
done
rm topo
# Send file to public space in system 'sandra'
rsync -e 'ssh -p 22' -avz ../../public/network/node_to_ports alan@134.226.55.22:/var/opt/sdn-optical/public/network/
